[{"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js":"1","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js":"2","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\registerServiceWorker.js":"3","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\Layout.js":"4","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\Home.js":"5","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\NavMenu.js":"6","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js":"7","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js":"8"},{"size":521,"mtime":1611061626777,"results":"9","hashOfConfig":"10"},{"size":932,"mtime":1611481797480,"results":"11","hashOfConfig":"10"},{"size":4121,"mtime":1611061626778,"results":"12","hashOfConfig":"10"},{"size":352,"mtime":1611061626723,"results":"13","hashOfConfig":"10"},{"size":4216,"mtime":1611061626722,"results":"14","hashOfConfig":"10"},{"size":1638,"mtime":1611061626725,"results":"15","hashOfConfig":"10"},{"size":1016,"mtime":1611482093734,"results":"16","hashOfConfig":"10"},{"size":3246,"mtime":1611486569324,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"hrloeu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js",[],["40","41"],"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js",[],"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\Layout.js",["42"],"import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\Home.js",["43","44","45","46","47","48"],"import React, { Component, useState, useEffect, setInterval} from 'react';\r\nimport logo from '../images/logo1.png';\r\nimport background from '../images/background.png';\r\nimport navBackground from '../images/navBackground.png';\r\nimport { Button, Popover, PopoverHeader, PopoverBody, Text } from \"reactstrap\";\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\n\r\n\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { percentage: 60, alt: \"0\", droneTextClicked: false };\r\n        this.clickme = this.clickme.bind(this);\r\n        this.PopoverItem = this.PopoverItem.bind(this);\r\n        this.handleAltInterval = this.handleAltInterval.bind(this);\r\n        this.startAltChange = this.startAltChange.bind(this);\r\n        this.stopAltChange = this.stopAltChange.bind(this);\r\n        this.fetchAlt = this.fetchAlt.bind(this);\r\n\r\n    }\r\n\r\n    async clickme() {\r\n        const response = await fetch('Ugcs/executeMission');\r\n        console.log(\"SUCCESS\");\r\n    }\r\n\r\n\r\n   \r\n    async fetchAlt() {\r\n        const setAltState = (data) => {\r\n            this.setState({ alt: data });\r\n        };\r\n        await fetch('Ugcs/vehicleAlt')\r\n            .then((resp) => resp.json())\r\n            .then(function (data) {\r\n                console.log(data);\r\n                setAltState(data);\r\n            }); \r\n               \r\n    }\r\n   \r\n    startAltChange = () => {\r\n        this.intervalID = window.setInterval(this.fetchAlt.bind(this), 1000);\r\n        this.setState({ droneTextClicked: true })\r\n    }\r\n\r\n    stopAltChange = () => {\r\n        clearInterval(this.intervalID)\r\n        this.setState({ droneTextClicked: false })\r\n    }\r\n\r\n    handleAltInterval = () => {\r\n        if (this.state.droneTextClicked) {\r\n            this.stopAltChange()\r\n        } else {\r\n            this.startAltChange()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    PopoverItem (props){\r\n        const [popoverOpen, setPopoverOpen] = useState(false);\r\n        const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n        return (\r\n            <span>\r\n                <Button\r\n                    className=\"droneData-btn\"\r\n                    id=\"Popover\"\r\n                    type=\"button\"\r\n                    onClick={this.handleAltInterval}\r\n                >\r\n                    Drone\r\n                </Button>\r\n                <Popover\r\n                    placement=\"buttom\"\r\n                    isOpen={popoverOpen}\r\n                    target={\"Popover\"}\r\n                    toggle={toggle}\r\n                >\r\n                    <PopoverBody style={{ display: 'flex', flexDirection: 'column', textAlign: 'center', backgroundImage: 'url(' + navBackground + ')', backgroundSize: 'cover', color: 'white' }}>\r\n                            <b>Drone1:</b>\r\n                        <text>status:</text>\r\n                        <script>{this.fetchData}</script>\r\n                        <text>altitude:  {`${this.state.alt}`}</text>\r\n                        <text>battery:  {`${60}%`}</text>\r\n                        <CircularProgressbar value={60} text={`${60}% battery`} style={{ strokeLinecap: 'round', textSize: '16px', textColor: 'white', trailColor: 'white',}} />\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </span>\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mainDiv\">\r\n                <div className=\"buttonPanel\">\r\n                    <img className=\"logo\" src={logo} alt=\"Logo\" />\r\n                    <button className=\"buttonPanel-btn\">Fly To Point</button>\r\n                    <button className=\"buttonPanel-btn\">Beauty Shot</button>\r\n                    <button className=\"buttonPanel-btn\" onClick={this.clickme}>FlyBy</button>\r\n                    <button className=\"buttonPanel-btn\">Critical Holes</button>\r\n                    <button className=\"buttonPanel-btn\">Perim Sweep</button>\r\n                    <this.PopoverItem/>\r\n                </div>\r\n                <div className=\"backgroundDiv\">\r\n                    <img className=\"background\" src={background} alt=\"Background\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n",["49","50"],"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\NavMenu.js",[],"C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js",["51","52"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport logo from '../images/logo1.png';\r\nimport PopoverItem from './PopoverItem'\r\n\r\nfunction HomeToolbar() {\r\n\r\n\r\n    /*const handleFlyByClick = () =>{\r\n        axios.get('Ugcs/executeMission')\r\n        console.log(\"SUCCESS\");\r\n    }\r\n    */\r\n    const handleFlyByClick = async () => {\r\n    const response = await fetch('Ugcs/executeMission')\r\n    console.log(\"SUCCESS\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"buttonPanel\">\r\n            <img className=\"logo\" src={logo} alt=\"Logo\" />\r\n            <button className=\"buttonPanel-btn\">Fly To Point</button>\r\n            <button className=\"buttonPanel-btn\">Beauty Shot</button>\r\n            <button className=\"buttonPanel-btn\" onClick={handleFlyByClick}>FlyBy</button>\r\n            <button className=\"buttonPanel-btn\">Critical Holes</button>\r\n            <button className=\"buttonPanel-btn\">Perim Sweep</button>\r\n            <PopoverItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeToolbar\r\n\r\n\r\n\r\n","C:\\Users\\tamir\\מסמכים\\GitHub\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js",["53","54"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport navBackground from '../images/navBackground.png';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\nfunction PopoverItem() {\r\n    const [droneStatus, setDroneStatus] = useState({ percentage: 60, alt: \"0\", droneTextClicked: false })\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n    const intervalRef = useRef()\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    const fetchAlt = async () => {\r\n        const setAltState = (data) => {\r\n            setDroneStatus({...droneStatus, alt: data})\r\n        };\r\n        await fetch('Ugcs/vehicleAlt')\r\n            .then((resp) => resp.json())\r\n            .then(function (data) {\r\n                console.log(data);\r\n                setAltState(data);\r\n            }); \r\n               \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(popoverOpen){\r\n            intervalRef.current = setInterval(fetchAlt,1000)\r\n            setDroneStatus({...droneStatus, droneTextClicked: true})\r\n        }\r\n  \r\n        return () => {\r\n            clearInterval(intervalRef.current)\r\n            setDroneStatus({...droneStatus, droneTextClicked: false})\r\n        }\r\n    }, [popoverOpen])\r\n\r\n    /*\r\n    const startAltChange = () => {\r\n        this.intervalID = window.setInterval(this.fetchAlt.bind(this), 1000);\r\n        setDroneStatus({...droneStatus, droneTextClicked: true})\r\n    }\r\n\r\n    const stopAltChange = () => {\r\n        clearInterval(this.intervalID)\r\n        setDroneStatus({...droneStatus, droneTextClicked: false})\r\n    }\r\n    */\r\n\r\n    const handleAltInterval = () => {\r\n        if (droneStatus.droneTextClicked) {//if(!popoverOpen)\r\n            clearInterval(intervalRef.current)\r\n            setDroneStatus({...droneStatus, droneTextClicked: false})\r\n        }   \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <span>\r\n            <Button\r\n                className=\"droneData-btn\"\r\n                id=\"Popover\"\r\n                type=\"button\"\r\n                onClick={handleAltInterval}\r\n            >\r\n                Drone\r\n            </Button>\r\n            <Popover\r\n                placement=\"bottom\"\r\n                isOpen={popoverOpen}\r\n                target={\"Popover\"}\r\n                toggle={toggle}\r\n            >\r\n                <PopoverBody style={{ display: 'flex', \r\n                                    flexDirection: 'column', \r\n                                    textAlign: 'center', \r\n                                    backgroundImage: 'url(' + navBackground + ')', \r\n                                    backgroundSize: 'cover', \r\n                                    color: 'white' }}>\r\n                    <b>Drone1:</b>\r\n                    <text>status:</text>\r\n                    <text>altitude:  {`${droneStatus.alt}`}</text>\r\n                    <text>battery:  {`${droneStatus.percentage}%`}</text>\r\n                    <CircularProgressbar value={60} text={`${60}% battery`} style={{ strokeLinecap: 'round', textSize: '16px', textColor: 'white', trailColor: 'white',}} />\r\n                </PopoverBody>\r\n            </Popover>\r\n            </span>\r\n    )\r\n}\r\n\r\nexport default PopoverItem\r\n\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":1,"column":38,"nodeType":"61","messageId":"62","endLine":1,"endColumn":47},{"ruleId":"59","severity":1,"message":"64","line":1,"column":49,"nodeType":"61","messageId":"62","endLine":1,"endColumn":60},{"ruleId":"59","severity":1,"message":"65","line":5,"column":27,"nodeType":"61","messageId":"62","endLine":5,"endColumn":40},{"ruleId":"59","severity":1,"message":"66","line":5,"column":55,"nodeType":"61","messageId":"62","endLine":5,"endColumn":59},{"ruleId":"59","severity":1,"message":"67","line":26,"column":15,"nodeType":"61","messageId":"62","endLine":26,"endColumn":23},{"ruleId":"68","severity":2,"message":"69","line":66,"column":47,"nodeType":"61","endLine":66,"endColumn":55},{"ruleId":"55","replacedBy":"70"},{"ruleId":"57","replacedBy":"71"},{"ruleId":"59","severity":1,"message":"72","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"67","line":15,"column":11,"nodeType":"61","messageId":"62","endLine":15,"endColumn":19},{"ruleId":"59","severity":1,"message":"65","line":3,"column":27,"nodeType":"61","messageId":"62","endLine":3,"endColumn":40},{"ruleId":"73","severity":1,"message":"74","line":35,"column":8,"nodeType":"75","endLine":35,"endColumn":21,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'NavMenu' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setInterval' is defined but never used.","'PopoverHeader' is defined but never used.","'Text' is defined but never used.","'response' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called in a class component. React Hooks must be called in a React function component or a custom React Hook function.",["77"],["78"],"'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'droneStatus' and 'fetchAlt'. Either include them or remove the dependency array. You can also do a functional update 'setDroneStatus(d => ...)' if you only need 'droneStatus' in the 'setDroneStatus' call.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [droneStatus, fetchAlt, popoverOpen]",{"range":"82","text":"83"},[1281,1294],"[droneStatus, fetchAlt, popoverOpen]"]