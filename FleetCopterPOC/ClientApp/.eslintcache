[{"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js":"1","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js":"2","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js":"3","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js":"4","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js":"5","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js":"6"},{"size":717,"mtime":1612887638550,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1612887638552,"results":"9","hashOfConfig":"8"},{"size":672,"mtime":1612887638493,"results":"10","hashOfConfig":"8"},{"size":752,"mtime":1612887638498,"results":"11","hashOfConfig":"8"},{"size":1339,"mtime":1613216719693,"results":"12","hashOfConfig":"8"},{"size":3356,"mtime":1612967599319,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11oijip",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js",[],["29","30"],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js",["31"],"import React , {useState} from 'react'\r\nimport axios from 'axios'\r\nimport logo from '../images/logo1.png';\r\nimport PopoverItem from './PopoverItem'\r\n\r\n\r\nfunction HomeToolbar() {\r\n\r\n    const [playerStatus,SetPlayerStatus] = useState(false)\r\n    const handleFlyByClick = () => {\r\n        axios.get('Ugcs/executeMission')\r\n            .then(res => {\r\n                console.log(res)\r\n                if(res.data.Answer)\r\n                    SetPlayerStatus(true)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    /*\r\n    const handleFlyByClick = async () => {\r\n        const response = await fetch('Ugcs/executeMission')\r\n        console.log(\"SUCCESS\")\r\n        console.log(response)\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div className=\"buttonPanel\">\r\n            <img className=\"logo\" src={logo} alt=\"Logo\" />\r\n            <button className=\"buttonPanel-btn\">Fly To Point</button>\r\n            <button className=\"buttonPanel-btn\">Beauty Shot</button>\r\n            <button className=\"buttonPanel-btn\" onClick={handleFlyByClick}>FlyBy</button>\r\n            <button className=\"buttonPanel-btn\">Critical Holes</button>\r\n            <button className=\"buttonPanel-btn\">Perim Sweep</button>\r\n            <PopoverItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeToolbar\r\n\r\n\r\n\r\n","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js",["32","33","34"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport navBackground from '../images/navBackground.png';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\nfunction PopoverItem() {\r\n    \r\n    const [droneStatus, setDroneStatus] = useState({ percentage: 60, alt: \"0\", droneTextClicked: false })\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n    const intervalRef = useRef()\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    const fetchAlt = async () => {\r\n        const setAltState = (data) => {\r\n            setDroneStatus({...droneStatus, alt: data})\r\n        };\r\n        await fetch('Ugcs/vehicleAlt')\r\n            .then((resp) => resp.json())\r\n            .then(function (data) {\r\n                console.log(data);\r\n                setAltState(data);\r\n            }); \r\n               \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(popoverOpen){\r\n            intervalRef.current = setInterval(fetchAlt,1000)\r\n            setDroneStatus({...droneStatus, droneTextClicked: true})\r\n            \r\n        }\r\n        //console.log(\"popover\")\r\n        return () => {\r\n            clearInterval(intervalRef.current)\r\n            setDroneStatus({...droneStatus, droneTextClicked: false})\r\n        }\r\n    }, [popoverOpen])\r\n\r\n    /*\r\n    const startAltChange = () => {\r\n        this.intervalID = window.setInterval(this.fetchAlt.bind(this), 1000);\r\n        setDroneStatus({...droneStatus, droneTextClicked: true})\r\n    }\r\n\r\n    const stopAltChange = () => {\r\n        clearInterval(this.intervalID)\r\n        setDroneStatus({...droneStatus, droneTextClicked: false})\r\n    }\r\n    */\r\n\r\n    const handleAltInterval = () => {\r\n        if (droneStatus.droneTextClicked) {//if(!popoverOpen)\r\n            clearInterval(intervalRef.current)\r\n            setDroneStatus({...droneStatus, droneTextClicked: false})\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <span>\r\n            \r\n            <button\r\n                className=\"droneData-btn\"\r\n                id=\"Popover\"\r\n                type=\"button\"\r\n                onClick={handleAltInterval}\r\n            >\r\n                Drone\r\n            </button>\r\n            <Popover\r\n                placement=\"bottom\"\r\n                isOpen={popoverOpen}\r\n                target={\"Popover\"}\r\n                toggle={toggle}\r\n            >\r\n                <PopoverBody style={{ display: 'flex', \r\n                                    flexDirection: 'column', \r\n                                    textAlign: 'center', \r\n                                    backgroundImage: 'url(' + navBackground + ')', \r\n                                    backgroundSize: 'cover', \r\n                                    color: 'white' }}>\r\n                    <b>Drone1:</b>\r\n                    <text>status:</text>\r\n                    <text>altitude:  {`${droneStatus.alt}`}</text>\r\n                    <text>battery:  {`${droneStatus.percentage}%`}</text>\r\n                    <CircularProgressbar value={60} text={`${60}% battery`} style={{ strokeLinecap: 'round', textSize: '16px', textColor: 'white', trailColor: 'white',}} />\r\n                </PopoverBody>\r\n            </Popover>\r\n            </span>\r\n    )\r\n    \r\n}\r\n\r\nexport default PopoverItem\r\n\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":9,"column":12,"nodeType":"41","messageId":"42","endLine":9,"endColumn":24},{"ruleId":"39","severity":1,"message":"43","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":16},{"ruleId":"39","severity":1,"message":"44","line":4,"column":27,"nodeType":"41","messageId":"42","endLine":4,"endColumn":40},{"ruleId":"45","severity":1,"message":"46","line":38,"column":8,"nodeType":"47","endLine":38,"endColumn":21,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'playerStatus' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'PopoverHeader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'droneStatus' and 'fetchAlt'. Either include them or remove the dependency array. You can also do a functional update 'setDroneStatus(d => ...)' if you only need 'droneStatus' in the 'setDroneStatus' call.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [droneStatus, fetchAlt, popoverOpen]",{"range":"54","text":"55"},[1379,1392],"[droneStatus, fetchAlt, popoverOpen]"]