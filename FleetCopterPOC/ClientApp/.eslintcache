[{"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js":"1","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js":"2","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js":"3","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js":"4","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js":"5","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js":"6","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\store.js":"7","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\rootReducer.js":"8","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\index.js":"9","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneReducer.js":"10","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneActions.js":"11","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneTypes.js":"12","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertReducer.js":"13","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertActions.js":"14","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertTypes.js":"15","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsReducer.js":"16","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsTypes.js":"17","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsActions.js":"18"},{"size":715,"mtime":1614851639189,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1612887638552,"results":"21","hashOfConfig":"20"},{"size":839,"mtime":1614877470381,"results":"22","hashOfConfig":"20"},{"size":6186,"mtime":1615041043608,"results":"23","hashOfConfig":"20"},{"size":5013,"mtime":1615139382374,"results":"24","hashOfConfig":"20"},{"size":8972,"mtime":1615039589372,"results":"25","hashOfConfig":"20"},{"size":216,"mtime":1614850736304,"results":"26","hashOfConfig":"20"},{"size":408,"mtime":1615056652101,"results":"27","hashOfConfig":"20"},{"size":140,"mtime":1615057510919,"results":"28","hashOfConfig":"20"},{"size":1052,"mtime":1615039553295,"results":"29","hashOfConfig":"20"},{"size":5277,"mtime":1615057105045,"results":"30","hashOfConfig":"20"},{"size":163,"mtime":1614850736119,"results":"31","hashOfConfig":"20"},{"size":468,"mtime":1614851639197,"results":"32","hashOfConfig":"20"},{"size":549,"mtime":1614851639194,"results":"33","hashOfConfig":"20"},{"size":90,"mtime":1614851639329,"results":"34","hashOfConfig":"20"},{"size":1003,"mtime":1615139229797,"results":"35","hashOfConfig":"20"},{"size":194,"mtime":1615055885930,"results":"36","hashOfConfig":"20"},{"size":1133,"mtime":1615056367981,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"msgui8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js",[],["78","79"],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js",["80"],"import '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport React, { useState,useEffect } from \"react\";\r\n//import { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { connect } from 'react-redux'\r\nimport { sendDronePause, sendDroneResume, sendDroneReturnHome } from '../redux'\r\nimport pauseIcon from '../images/pause_icon.png';\r\nimport playIcon from '../images/play_icon.png';\r\nimport stopIcon from '../images/stop_icon.png';\r\n\r\n\r\n\r\nfunction PlayerButton(props) {\r\n    const [playerButton,setPlayerButton] = useState(true)\r\n    const vehicleId = (props.droneData &&\r\n                       props.droneData.droneDataArr && \r\n                       props.droneData.droneDataArr[1] && \r\n                       props.droneData.droneDataArr[1].vehicleId)\r\n\r\n    const vehicleState = (props.droneData &&\r\n                          props.droneData.droneDataArr && \r\n                          props.droneData.droneDataArr[1] && \r\n                          props.droneData.droneDataArr[1].state)\r\n\r\n    const isOnFlight = ((vehicleState === 'pauseState') || (vehicleState === 'resumeState'))                     \r\n\r\n      //1)need to check and handle props.error?    !!!!!!!!!!!\r\n      //2)keep tracking drone while returns home, when it get home -> drone became disabled.\r\n      //   until then pause and resume should be available.\r\n    useEffect(() => {\r\n        console.log(\"vehicle state changed\");\r\n        console.log(vehicleState);\r\n        console.log(props.droneData);\r\n      if(vehicleState === 'pauseState'){\r\n        setPlayerButton(true)\r\n      }//pause button pressed => change to play button \r\n      else if(vehicleState === 'resumeState'){\r\n        setPlayerButton(false)\r\n      } //play button pressed => change to pause button\r\n      else {\r\n        setPlayerButton(true)\r\n      } //stop button pressed => change to play button (disabled)\r\n    }, [vehicleState])\r\n\r\n    \r\n\r\n    const clickHandle = () => {\r\n      if(isOnFlight && playerButton )\r\n        //'play-circle' button pressed\r\n        props.sendDroneResume(props.droneData.clientId,vehicleId)\r\n          \r\n      else if(isOnFlight && !playerButton)\r\n        //'pause' button pressed\r\n        props.sendDronePause(props.droneData.clientId,vehicleId)   \r\n    }\r\n\r\n    const stopClickHandle = () => {\r\n        props.sendDroneReturnHome(props.droneData.clientId,vehicleId) \r\n    }\r\n/*\r\n    const [playerIcon,setPlayerIcon] = useState('play-circle')\r\n\r\n useEffect(() => {\r\n      if(vehicleState === 'pauseState') setPlayerIcon('play-circle')//pause button pressed => change to play button \r\n      else if(vehicleState === 'resumeState') setPlayerIcon('pause')//play button pressed => change to pause button\r\n      else setPlayerIcon('play-circle')                             //stop button pressed => change to play button (disabled)\r\n    }, [vehicleState])\r\n\r\n\r\n    const clickHandle = () => {\r\n      if(isOnFlight && playerIcon === 'play-circle')\r\n        //'play-circle' button pressed\r\n        props.sendDroneResume(props.droneData.clientId,vehicleId)\r\n          \r\n      else if(isOnFlight && playerIcon === 'pause')\r\n        //'pause' button pressed\r\n        props.sendDronePause(props.droneData.clientId,vehicleId)   \r\n    }\r\n\r\n    <MDBBtn tag=\"a\" size=\"lg\" color=\"grey\" className=\"button\" onClick={stopClickHandle}\r\n             style={{\"borderRadius\":\"50%\",\"paddingLeft\": \"16px\",\"paddingRight\":\"16px\"}}>  \r\n            <MDBIcon icon=\"stop\" size=\"4x\"/>\r\n            </MDBBtn>\r\n            <MDBBtn tag=\"a\" size=\"lg\" color=\"grey\" className=\"button\" onClick={clickHandle}\r\n             style={{\"borderRadius\":\"50%\",\"paddingLeft\": \"16px\",\"paddingRight\":\"16px\"}}>\r\n              <MDBIcon icon={playerIcon} size=\"4x\"/>\r\n            </MDBBtn>\r\n*/\r\n\r\n    return (\r\n      <div style={{backgroundColor:\"#f2f2f2\", marginLeft: \"50px\", height: \"60px\", width: \"150px\", borderColor: \"black\", borderRadius: \"25px\", backgroundImage: \"linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9) 100%)\"}}>\r\n        {\r\n          isOnFlight ?\r\n          (<React.Fragment>\r\n            <div style={{height:\"auto\", width:\"110px\", margin:\"0 auto\", position:\"center\"}}>\r\n              <button className=\"button\" onClick={clickHandle} style={{borderRadius:\"50%\", height:\"50px\", width:\"50px\", paddingLeft:\"16px\", paddingRight:\"20px\", backgroundImage:playerButton?`url(${playIcon})`:`url(${pauseIcon})`, backgroundSize: \"cover\"}}>\r\n              </button>\r\n              <button className=\"button\" onClick={stopClickHandle} style={{borderRadius:\"50%\", height:\"50px\", width:\"50px\", marginLeft:\"5px\", paddingLeft:\"16px\", paddingRight:\"16px\", backgroundImage:`url(${stopIcon})`, backgroundSize: \"cover\"}}>\r\n              </button>\r\n            </div>\r\n          </React.Fragment>) \r\n          :\r\n          (<React.Fragment>\r\n            <div style={{height:\"auto\", width:\"110px\", margin:\"0 auto\", position:\"relative\"}}>\r\n              <button className=\"button\" disabled onClick={clickHandle} style={{borderRadius:\"50%\", height:\"50px\", width:\"50px\", paddingLeft:\"16px\", paddingRight:\"16px\", backgroundImage:playerButton?`url(${playIcon})`:`url(${pauseIcon})`, backgroundSize: \"cover\"}}>\r\n              </button>\r\n              <button className=\"button\" disabled onClick={stopClickHandle} style={{borderRadius:\"50%\", height:\"50px\", width:\"50px\", marginLeft:\"5px\", paddingLeft:\"16px\", paddingRight:\"16px\", backgroundImage:`url(${stopIcon})`, backgroundSize: \"cover\"}}>\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n          )\r\n          \r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.firstDrone.loading,\r\n    droneData: state.firstDrone.droneData,\r\n    error: state.firstDrone.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      sendDronePause: (cId,vId) => dispatch(sendDronePause(cId,vId)),\r\n      sendDroneResume: (cId,vId) => dispatch(sendDroneResume(cId,vId)),\r\n      sendDroneReturnHome: (cId,vId) => dispatch(sendDroneReturnHome(cId,vId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PlayerButton)\r\n","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js",["81","82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js",["92","93","94","95"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport navBackground from '../images/navBackground.png';\r\nimport { Popover, PopoverBody } from \"reactstrap\";\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { connect } from 'react-redux'\r\nimport { updateDroneData } from '../redux'\r\n\r\nfunction PopoverItem(props) {\r\n\r\n\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n    const intervalRef = useRef()\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    const [drone1Changed, setDrone1Changed] = useState(false)\r\n    const [drone2Changed, setDrone2Changed] = useState(false)\r\n\r\n    const clientId = (props.droneData && props.droneData.clientId)\r\n\r\n    const drone1Alt = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[0] &&\r\n        props.droneData.droneDataArr[0].altitudeAgl)\r\n\r\n    const drone2Alt = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[1] &&\r\n        props.droneData.droneDataArr[1].altitudeAgl)\r\n\r\n    const drone1bat = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[0] &&\r\n        props.droneData.droneDataArr[0].battery)\r\n\r\n    const drone2bat = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[1] &&\r\n        props.droneData.droneDataArr[1].battery)\r\n\r\n    const drone1State = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[0] &&\r\n        props.droneData.droneDataArr[0].state)\r\n\r\n    const drone2State = (props.droneData &&\r\n        props.droneData.droneDataArr &&\r\n        props.droneData.droneDataArr[1] &&\r\n        props.droneData.droneDataArr[1].state)\r\n\r\n\r\n    const [drone1Status, setDrone1Status] = useState({ status: (drone1State === \"resumeState\" || drone1State === \"pauseState\") ? \"airborne\" : \"stand by\", batteryPathColor: (drone1bat <= 20) ? '#4db8ff' : (drone1bat <= 100) ? '#e60000' : \"#a6a6a6\", droneTextClicked: false, changed: false })\r\n    const [drone2Status, setDrone2Status] = useState({ status: (drone1State === \"resumeState\" || drone1State === \"pauseState\") ? \"airborne\" : \"stand by\", batteryPathColor: \"#a6a6a6\", droneTextClicked: false, changed: false })\r\n\r\n    const updatePathColor = (dronenum) => {\r\n        if (dronenum === 1) {\r\n            if (drone1bat <= 20) {\r\n                setDrone1Status({ ...drone1Status, batteryPathColor: '#e60000' })\r\n            }\r\n            else if (drone1bat <= 100) { setDrone1Status({ ...drone1Status, batteryPathColor: '#4db8ff' }) }\r\n            else { setDrone1Status({ ...drone1Status, batteryPathColor: '#a6a6a6' }) }\r\n        }\r\n        else if (dronenum === 2) {\r\n            if (drone2bat <= 20) { setDrone2Status({ ...drone2Status, batteryPathColor: '#e60000' }) }\r\n            else if (drone2bat <= 100) { setDrone2Status({ ...drone2Status, batteryPathColor: '#4db8ff' }) }\r\n            else { setDrone2Status({ ...drone2Status, batteryPathColor: '#a6a6a6' }) }\r\n\r\n        }\r\n    }\r\n    const updateState = (dronenum) => {\r\n        if (dronenum === 1) {\r\n            if (drone1State === \"resumeState\" || drone1State === \"pauseState\") { setDrone1Status({ ...drone1Status, status: \"airborne\" }) }\r\n            else { setDrone1Status({ ...drone1Status, status: \"stand by\" }) }\r\n        }\r\n        else if (dronenum === 2) {\r\n            if (drone2State === \"resumeState\" || drone2State === \"pauseState\") { setDrone2Status({ ...drone2Status, status: \"airborne\" }) }\r\n            else { setDrone2Status({ ...drone2Status, status: \"stand by\" }) }\r\n        }\r\n    }\r\n\r\n    const fetchAlt = async () => {\r\n        await props.updateDroneData(props.droneData.clientId);\r\n        setDrone1Changed(!drone1Changed);\r\n        setDrone2Changed(!drone2Changed);\r\n    }\r\n\r\n\r\n    //update drones telemetry when new drone data has been fetched frome the server\r\n    useEffect(() => {\r\n        updateState(1);\r\n        updatePathColor(1);\r\n    }, [drone1Changed])\r\n\r\n    useEffect(() => {\r\n        updateState(2);\r\n        updatePathColor(2);\r\n    }, [drone2Changed])\r\n\r\n    useEffect(() => {\r\n        if (popoverOpen) {\r\n            intervalRef.current = setInterval(fetchAlt, 1000)\r\n            setDrone1Status({ ...drone1Status, droneTextClicked: true })\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: true })\r\n        }\r\n        return () => {\r\n            clearInterval(intervalRef.current)\r\n            setDrone1Status({ ...drone1Status, droneTextClicked: false })\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: false })\r\n        }\r\n    }, [popoverOpen])\r\n\r\n    const handleAltInterval = () => {\r\n        props.updateDroneData(props.droneData.clientId)\r\n        setDrone1Changed(!drone1Changed);\r\n        setDrone2Changed(!drone2Changed);\r\n        if (drone1Status.droneTextClicked) {//if(!popoverOpen)\r\n            clearInterval(intervalRef.current)\r\n            setDrone1Status({ ...drone1Status, droneTextClicked: false })\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: false })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <span>\r\n\r\n            <button\r\n                className=\"droneData-btn\"\r\n                id=\"Popover\"\r\n                type=\"button\"\r\n                onClick={handleAltInterval}\r\n            >\r\n                Drone\r\n            </button>\r\n            <Popover\r\n                placement=\"bottom\"\r\n                isOpen={popoverOpen}\r\n                target={\"Popover\"}\r\n                toggle={toggle}\r\n            >\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    <PopoverBody style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        textAlign: 'center',\r\n                        backgroundImage: 'url(' + navBackground + ')',\r\n                        backgroundSize: 'cover',\r\n                        color: 'white'\r\n                    }}>\r\n                        <b style={{ marginBottom: \"10px\" }}> Drone 1:</b>\r\n                        <div style={{ textAlign: \"left\", marginBottom: \"10px\", display: 'flex', flexDirection: 'column' }}>\r\n                            <strong>status: {`${drone1Status.status}`}</strong>\r\n                            <strong>altitude: {`${drone1Alt}`}</strong>\r\n                        </div>\r\n                        <div style={{ width: 80, height: 80 }}>\r\n                            <CircularProgressbarWithChildren value={drone1bat} styles={buildStyles({ strokeLinecap: 'butt', textSize: '14px', trailColor: '#a6a6a6', pathColor: drone1Status.batteryPathColor, textColor: '#ffffff' })}>\r\n                                <b style={{ fontSize: \"20px\" }}>{drone1bat}%</b>\r\n                                <strong>Battery</strong>\r\n                            </CircularProgressbarWithChildren>\r\n                        </div>\r\n                    </PopoverBody>\r\n                    <PopoverBody style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        textAlign: 'center',\r\n                        backgroundImage: 'url(' + navBackground + ')',\r\n                        backgroundSize: 'cover',\r\n                        color: 'white'\r\n                    }}>\r\n                        <b style={{ marginBottom: \"10px\" }}>Drone 2:</b>\r\n                        <div style={{ textAlign: \"left\", marginBottom: \"10px\", display: 'flex', flexDirection: 'column' }}>\r\n                            <strong>status: {`${drone2Status.status}`}</strong>\r\n                            <strong>altitude: {`${drone2Alt}`}</strong>\r\n                        </div>\r\n                        <div style={{ width: 80, heights: 80 }}>\r\n                            <CircularProgressbarWithChildren value={drone2bat} styles={buildStyles({ strokeLinecap: 'butt', textSize: '14px', trailColor: '#a6a6a6', pathColor: drone2Status.batteryPathColor, textColor: '#ffffff' })}>\r\n                                <b style={{ fontSize: \"20px\" }}>{drone2bat}%</b>\r\n                                <strong>Battery</strong>\r\n                            </CircularProgressbarWithChildren>\r\n                        </div>\r\n                    </PopoverBody>\r\n                </div>\r\n            </Popover>\r\n        </span>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.firstDrone.loading,\r\n        droneData: state.firstDrone.droneData,\r\n        error: state.firstDrone.error,\r\n        errMsg: state.firstDrone.errMsg\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateDroneData: (cId) => dispatch(updateDroneData(cId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PopoverItem)\r\n","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\store.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\rootReducer.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\index.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneReducer.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneActions.js",["96","97","98","99"],"import axios from 'axios'\r\nimport {setFlyByState, setBeautyShotState, setPerimSweapState, setCriticalHolesState} from '../MissionButtons/missionButtonsActions'\r\nimport { \r\n    SEND_DRONE_REQUEST,\r\n    SEND_DRONE_SUCCESS,\r\n    SEND_DRONE_ERROR } from './firstDroneTypes'\r\n\r\nexport const sendDroneRequest = () => {\r\n    return{\r\n        type: SEND_DRONE_REQUEST\r\n    }\r\n}\r\n\r\nexport const sendDroneSuccess = droneData => {\r\n    return{\r\n        type: SEND_DRONE_SUCCESS,\r\n        payload: droneData\r\n    }\r\n}\r\n\r\nexport const sendDroneError = error => {\r\n    return{\r\n        type: SEND_DRONE_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const startConnection = (clientId) => {\r\n    return (dispatch) => {\r\n        axios.get(`Ugcs/startConnection/?clientId=${clientId}`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                //console.log(data.droneData);\r\n                if (data.status === \"success\") {\r\n                    //console.log(\"startConnection calling reducer\")\r\n                    dispatch(sendDroneSuccess(data.droneData))\r\n                }\r\n                else if (data.status === \"error\") {\r\n                    console.log(data)\r\n                    dispatch(sendDroneError(data))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const errMsg = error.response.data\r\n                console.log(errMsg)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const sendDroneMission = (mission, clientId, vehicleId) => {\r\n    return (dispatch) => {\r\n        axios.get(`Ugcs/executeMission/?clientId=${clientId}&mission=${mission}&vehicleId=${vehicleId}`)\r\n            .then(response => {\r\n                const data = response.data\r\n                console.log(data)\r\n                if (data.status === \"success\") {\r\n                    //console.log(\"mission calling reducer\")\r\n                    dispatch(sendDroneSuccess(data.droneData))\r\n                    switch(mission){\r\n                        case 'FlyBy':\r\n                            dispatch(setFlyByState(true));\r\n                    }\r\n                }\r\n                else if (data.status === \"error\") {\r\n                    console.log(data)\r\n                    dispatch(sendDroneError(data))\r\n                    return false;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const errMsg = error.response.data\r\n                console.log(errMsg)\r\n                return false;\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendDronePause = (clientId,vehicleId) => {\r\n    return (dispatch) => {\r\n        dispatch(sendDroneRequest);\r\n        axios.get(`Ugcs/pauseMission?clientId=${clientId}&vehicleId=${vehicleId}`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                console.log(data)\r\n                if (data.status === \"success\") {\r\n                    //console.log(\"pause calling reducer\")\r\n                    dispatch(sendDroneSuccess(data.droneData));\r\n                }\r\n                else if (data.status === \"error\") {\r\n                    console.log(data);\r\n                }\r\n                \r\n            })\r\n            .catch(error => {\r\n                const errMsg = error.response.data;\r\n                console.log(errMsg);\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendDroneResume = (clientId,vehicleId) => {\r\n    return (dispatch) => {\r\n        dispatch(sendDroneRequest)\r\n        axios.get(`Ugcs/resumeMission?clientId=${clientId}&vehicleId=${vehicleId}`)\r\n            .then(response => {\r\n                const data = response.data\r\n                console.log(data)\r\n                if (data.status === \"success\") {\r\n                    //console.log(\"backHome calling reducer\")\r\n                    dispatch(sendDroneSuccess(data.droneData))\r\n                }\r\n                else if (data.status === \"error\") {\r\n                    console.log(data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const errMsg = error.response.data\r\n                console.log(errMsg)\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendDroneReturnHome = (clientId,vehicleId) => {\r\n    return (dispatch) => {\r\n        dispatch(sendDroneRequest)\r\n        axios.get(`Ugcs/returnHomeMission?clientId=${clientId}&vehicleId=${vehicleId}`)\r\n            .then(response => {\r\n                const data = response.data\r\n                //console.log(data)\r\n                if (data.status === \"success\") {\r\n                    dispatch(sendDroneSuccess(data.droneData))\r\n                }\r\n                else if (data.status === \"error\") {\r\n                    console.log(data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const errMsg = error.response.data\r\n                console.log(errMsg)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const updateDroneData = (clientId) => {\r\n    return (dispatch) => {\r\n        axios.get(`Ugcs/updateDronesData/?clientId=${clientId}`)\r\n            .then(response => {\r\n                const data = response.data\r\n                //console.log(\"updateDronData calling reducer\")\r\n                console.log(data)\r\n                dispatch(sendDroneSuccess(data))\r\n            })\r\n            .catch(error => {\r\n            })\r\n    }\r\n}","C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\FirstDrone\\firstDroneTypes.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertReducer.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertActions.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\Alert\\alertTypes.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsReducer.js",["100"],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsTypes.js",[],"C:\\Users\\noyez\\source\\repos\\NoyEzra\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\redux\\MissionButtons\\missionButtonsActions.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":44,"column":8,"nodeType":"107","endLine":44,"endColumn":22,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":14,"column":12,"nodeType":"111","messageId":"112","endLine":14,"endColumn":24},{"ruleId":"109","severity":1,"message":"113","line":14,"column":26,"nodeType":"111","messageId":"112","endLine":14,"endColumn":41},{"ruleId":"109","severity":1,"message":"114","line":15,"column":12,"nodeType":"111","messageId":"112","endLine":15,"endColumn":28},{"ruleId":"109","severity":1,"message":"115","line":15,"column":30,"nodeType":"111","messageId":"112","endLine":15,"endColumn":49},{"ruleId":"109","severity":1,"message":"116","line":16,"column":12,"nodeType":"111","messageId":"112","endLine":16,"endColumn":29},{"ruleId":"109","severity":1,"message":"117","line":16,"column":31,"nodeType":"111","messageId":"112","endLine":16,"endColumn":51},{"ruleId":"109","severity":1,"message":"118","line":17,"column":12,"nodeType":"111","messageId":"112","endLine":17,"endColumn":32},{"ruleId":"109","severity":1,"message":"119","line":17,"column":34,"nodeType":"111","messageId":"112","endLine":17,"endColumn":57},{"ruleId":"105","severity":1,"message":"120","line":24,"column":8,"nodeType":"107","endLine":24,"endColumn":17,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"122","line":54,"column":8,"nodeType":"107","endLine":54,"endColumn":21,"suggestions":"123"},{"ruleId":"105","severity":1,"message":"124","line":91,"column":8,"nodeType":"107","endLine":91,"endColumn":21,"suggestions":"125"},{"ruleId":"109","severity":1,"message":"126","line":20,"column":11,"nodeType":"111","messageId":"112","endLine":20,"endColumn":19},{"ruleId":"105","severity":1,"message":"127","line":93,"column":8,"nodeType":"107","endLine":93,"endColumn":23,"suggestions":"128"},{"ruleId":"105","severity":1,"message":"127","line":98,"column":8,"nodeType":"107","endLine":98,"endColumn":23,"suggestions":"129"},{"ruleId":"105","severity":1,"message":"130","line":111,"column":8,"nodeType":"107","endLine":111,"endColumn":21,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":42},{"ruleId":"109","severity":1,"message":"133","line":2,"column":44,"nodeType":"111","messageId":"112","endLine":2,"endColumn":62},{"ruleId":"109","severity":1,"message":"134","line":2,"column":64,"nodeType":"111","messageId":"112","endLine":2,"endColumn":85},{"ruleId":"135","severity":1,"message":"136","line":62,"column":21,"nodeType":"137","messageId":"138","endLine":65,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":1,"column":1,"nodeType":"141","messageId":"142","fix":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.droneData'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-unused-vars","'flyByClicked' is assigned a value but never used.","Identifier","unusedVar","'setFlyByClicked' is assigned a value but never used.","'beatyShotClicked' is assigned a value but never used.","'setBeatyShotClicked' is assigned a value but never used.","'perimSweapClicked' is assigned a value but never used.","'setPerimSweapClicked' is assigned a value but never used.","'criticalHolesClicked' is assigned a value but never used.","'setCriticalHolesClicked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["147"],"React Hook useEffect has a missing dependency: 'handleInterval'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["149"],"'clientId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updatePathColor' and 'updateState'. Either include them or remove the dependency array.",["150"],["151"],"React Hook useEffect has missing dependencies: 'drone1Status', 'drone2Status', and 'fetchAlt'. Either include them or remove the dependency array. You can also do a functional update 'setDrone1Status(d => ...)' if you only need 'drone1Status' in the 'setDrone1Status' call.",["152"],"'setBeautyShotState' is defined but never used.","'setPerimSweapState' is defined but never used.","'setCriticalHolesState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"153","text":"154"},"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},[-1,0],"","Update the dependencies array to be: [props.droneData, vehicleState]",{"range":"169","text":"170"},"Update the dependencies array to be: [clientId, current, props]",{"range":"171","text":"172"},"Update the dependencies array to be: [handleInterval, props.flyBy]",{"range":"173","text":"174"},"Update the dependencies array to be: [props, props.error]",{"range":"175","text":"176"},"Update the dependencies array to be: [drone1Changed, updatePathColor, updateState]",{"range":"177","text":"178"},"Update the dependencies array to be: [drone2Changed, updatePathColor, updateState]",{"range":"179","text":"180"},"Update the dependencies array to be: [drone1Status, drone2Status, fetchAlt, popoverOpen]",{"range":"181","text":"182"},[1946,1960],"[props.droneData, vehicleState]",[934,943],"[clientId, current, props]",[1752,1765],"[handleInterval, props.flyBy]",[2903,2916],"[props, props.error]",[4165,4180],"[drone1Changed, updatePathColor, updateState]",[4269,4284],"[drone2Changed, updatePathColor, updateState]",[4802,4815],"[drone1Status, drone2Status, fetchAlt, popoverOpen]"]