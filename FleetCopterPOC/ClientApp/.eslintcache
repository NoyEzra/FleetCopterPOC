[{"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js":"1","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js":"2","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js":"3","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js":"4","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js":"5","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js":"6"},{"size":717,"mtime":1612251537764,"results":"7","hashOfConfig":"8"},{"size":672,"mtime":1612251537557,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1612251537770,"results":"10","hashOfConfig":"8"},{"size":1525,"mtime":1612343452844,"results":"11","hashOfConfig":"8"},{"size":752,"mtime":1612251537610,"results":"12","hashOfConfig":"8"},{"size":7293,"mtime":1612537972907,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1926rcy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\index.js",[],["29","30"],"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\App.js",[],"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\reportWebVitals.js",[],"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\HomeToolbar.js",["31"],"import React , {useState} from 'react'\r\nimport axios from 'axios'\r\nimport logo from '../images/logo1.png';\r\nimport PopoverItem from './PopoverItem'\r\n\r\n\r\nfunction HomeToolbar() {\r\n\r\n    const [playerStatus,SetPlayerStatus] = useState(false)\r\n    const [FlyByColor,SetFlyByColor] = useState(\"#ffffff\")\r\n    \r\n\r\n    const handleFlyByClick = () => {\r\n        SetFlyByColor(\"#ff8533\");\r\n        axios.get('Ugcs/executeMission')\r\n            .then(res => {\r\n                console.log(res)\r\n                if(res.data.Answer)\r\n                    SetPlayerStatus(true)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        SetFlyByColor(\"#ffffff\");\r\n    }\r\n\r\n    /*\r\n    const handleFlyByClick = async () => {\r\n        const response = await fetch('Ugcs/executeMission')\r\n        console.log(\"SUCCESS\")\r\n        console.log(response)\r\n    }\r\n    */\r\n\r\n    return (\r\n        <div className=\"buttonPanel\">\r\n            <img className=\"logo\" src={logo} alt=\"Logo\" />\r\n            <button className=\"buttonPanel-btn\">Fly To Point</button>\r\n            <button className=\"buttonPanel-btn\">Beauty Shot</button>\r\n            <button id=\"buttonPanel-btn\" className=\"buttonPanel-btn\" onClick={handleFlyByClick} style={{color:FlyByColor}}>FlyBy</button>\r\n            <button className=\"buttonPanel-btn\">Critical Holes</button>\r\n            <button className=\"buttonPanel-btn\">Perim Sweep</button>\r\n            <PopoverItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeToolbar\r\n\r\n\r\n\r\n","C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PlayerButton.js",[],"C:\\Users\\noyez\\source\\repos\\FleetCopterPOC\\FleetCopterPOC\\ClientApp\\src\\components\\PopoverItem.js",["32","33","34","35","36","37","38"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, {useState, useEffect, useRef, Text} from 'react'\r\nimport navBackground from '../images/navBackground.png';\r\nimport { Button, Popover, PopoverHeader, PopoverBody} from \"reactstrap\";\r\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nfunction PopoverItem() {\r\n    \r\n    const [drone1Status, setDrone1Status] = useState({ status: \"stand by\", battery: 10, batteryPathColor: \"#4db8ff\", alt: \"0\", droneTextClicked: false })\r\n    const [drone2Status, setDrone2Status] = useState({ status: \"stand by\", battery: 20, batteryPathColor: \"#4db8ff\", alt: \"0\", droneTextClicked: false })\r\n    const [popoverOpen, setPopoverOpen] = useState(false)\r\n    const intervalRef = useRef()\r\n    const toggle = () => setPopoverOpen(!popoverOpen)\r\n\r\n    const fetchAlt = async () => {\r\n        const setBatState = (data, numDrone) => {\r\n            if (numDrone == 1) {\r\n                if(data > 10){\r\n                    setDrone1Status({ ...drone1Status, battery: data , batteryPathColor: \"#4db8ff\"});\r\n                }\r\n                else{\r\n                    setDrone1Status({ ...drone1Status, battery: data, batteryPathColor: \"#e60000\"})\r\n                }\r\n            }\r\n            else {\r\n                if(data > 10){\r\n                    setDrone2Status({ ...drone2Status, battery: data, batteryPathColor: \"#4db8ff\"})\r\n                }\r\n                else{\r\n                    setDrone2Status({ ...drone2Status, battery: data, batteryPathColor: \"#e60000\"})\r\n                }\r\n            }\r\n        };\r\n\r\n        const setAltState = (data, numDrone) => {\r\n            if (numDrone == 1) {\r\n                if (data > 0) {\r\n                    setDrone1Status({ ...drone1Status, status: \"airborne\", alt: data })\r\n                }\r\n                else {\r\n                    setDrone1Status({ ...drone1Status, status: \"stand by\", alt: data })\r\n                }\r\n            }\r\n            else {\r\n                if (data > 0) {\r\n                    setDrone2Status({ ...drone2Status, status: \"airborne\", alt: data })\r\n                }\r\n                else {\r\n                    setDrone2Status({ ...drone2Status, status: \"stand by\", alt: data })\r\n                }\r\n            }\r\n  \r\n        \r\n        };\r\n\r\n        await fetch('Ugcs/vehicleAlt')\r\n            .then((resp) => resp.json())\r\n            .then(function (data) {\r\n                console.log(data);\r\n                setAltState(data.drone1Alt, 1);\r\n                setAltState(data.drone2Alt, 2);\r\n                setBatState(data.drone1Bat, 1);\r\n                setBatState(data.drone2Bat, 2);\r\n            }); \r\n\r\n\r\n               \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(popoverOpen){\r\n            intervalRef.current = setInterval(fetchAlt,1000)\r\n            setDrone1Status({...drone1Status, droneTextClicked: true})\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: true })\r\n        }\r\n        //console.log(\"popover\")\r\n        return () => {\r\n            clearInterval(intervalRef.current)\r\n            setDrone1Status({ ...drone1Status, droneTextClicked: false })\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: false })\r\n        }\r\n    }, [popoverOpen])\r\n\r\n    /*\r\n    const startAltChange = () => {\r\n        this.intervalID = window.setInterval(this.fetchAlt.bind(this), 1000);\r\n        setDroneStatus({...droneStatus, droneTextClicked: true})\r\n    }\r\n\r\n    const stopAltChange = () => {\r\n        clearInterval(this.intervalID)\r\n        setDroneStatus({...droneStatus, droneTextClicked: false})\r\n    }\r\n    */\r\n\r\n    const handleAltInterval = () => {\r\n        if (drone1Status.droneTextClicked) {//if(!popoverOpen)\r\n            clearInterval(intervalRef.current)\r\n            setDrone1Status({ ...drone1Status, droneTextClicked: false })\r\n            setDrone2Status({ ...drone2Status, droneTextClicked: false })\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <span>\r\n            \r\n            <button\r\n                className=\"droneData-btn\"\r\n                id=\"Popover\"\r\n                type=\"button\"\r\n                onClick={handleAltInterval}\r\n            >\r\n                Drone\r\n            </button>\r\n            <Popover\r\n                placement=\"bottom\"\r\n                isOpen={popoverOpen}\r\n                target={\"Popover\"}\r\n                toggle={toggle}\r\n            >\r\n            <div style={{display:'flex',flexDirection:'row'}}>\r\n                <PopoverBody style={{ display: 'flex', \r\n                                    flexDirection: 'column', \r\n                                    textAlign: 'center', \r\n                                    backgroundImage: 'url(' + navBackground + ')', \r\n                                    backgroundSize: 'cover', \r\n                                    color: 'white' }}>\r\n                    <b style={{marginBottom:\"10px\"}}> Drone 1:</b>\r\n                    <div style={{textAlign:\"left\", marginBottom:\"10px\", display:'flex',flexDirection:'column'}}>\r\n                        <text>status: {`${drone1Status.status}`}</text>\r\n                        <text>altitude: {`${drone1Status.alt}`}</text>\r\n                    </div>\r\n                    <div style={{ width: 80, height: 80 }}>\r\n                            <CircularProgressbarWithChildren value={drone1Status.battery} styles={buildStyles({ strokeLinecap: 'butt', textSize: '14px', trailColor: '#a6a6a6', pathColor: drone1Status.batteryPathColor, textColor: '#ffffff' })}>\r\n                                <b style={{fontSize:\"20px\"}}>{drone1Status.battery}%</b>\r\n                                <text>Battery</text>\r\n                            </CircularProgressbarWithChildren>\r\n                    </div>\r\n                </PopoverBody>\r\n                <PopoverBody style={{ display: 'flex', \r\n                                    flexDirection: 'column', \r\n                                    textAlign: 'center', \r\n                                    backgroundImage: 'url(' + navBackground + ')', \r\n                                    backgroundSize: 'cover', \r\n                                    color: 'white' }}>\r\n                    <b style={{marginBottom:\"10px\"}}>Drone 2:</b>\r\n                    <div style={{textAlign:\"left\", marginBottom:\"10px\", display:'flex',flexDirection:'column'}}>\r\n                        <text>status: {`${drone2Status.status}`}</text>\r\n                        <text>altitude: {`${drone2Status.alt}`}</text>\r\n                    </div>\r\n                    <div style={{ width: 80, height: 80 }}>\r\n                            <CircularProgressbarWithChildren value={drone2Status.battery} styles={buildStyles({strokeLinecap: 'butt', textSize: '14px', trailColor: '#a6a6a6', pathColor: drone2Status.batteryPathColor, textColor: '#ffffff'})}>\r\n                                    <b style={{fontSize:\"20px\"}}>{drone2Status.battery}%</b>\r\n                                    <text>Battery</text>\r\n                            </CircularProgressbarWithChildren>\r\n                    </div>\r\n                </PopoverBody>\r\n            </div>\r\n            </Popover>\r\n            </span>\r\n    )\r\n    \r\n}\r\n\r\nexport default PopoverItem\r\n\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":12,"nodeType":"45","messageId":"46","endLine":9,"endColumn":24},{"ruleId":"43","severity":1,"message":"47","line":2,"column":45,"nodeType":"45","messageId":"46","endLine":2,"endColumn":49},{"ruleId":"43","severity":1,"message":"48","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":4,"column":27,"nodeType":"45","messageId":"46","endLine":4,"endColumn":40},{"ruleId":"43","severity":1,"message":"50","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":19,"column":26,"nodeType":"53","messageId":"54","endLine":19,"endColumn":28},{"ruleId":"51","severity":1,"message":"52","line":38,"column":26,"nodeType":"53","messageId":"54","endLine":38,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":84,"column":8,"nodeType":"57","endLine":84,"endColumn":21,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'playerStatus' is assigned a value but never used.","Identifier","unusedVar","'Text' is defined but never used.","'Button' is defined but never used.","'PopoverHeader' is defined but never used.","'CircularProgressbar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drone1Status', 'drone2Status', and 'fetchAlt'. Either include them or remove the dependency array. You can also do a functional update 'setDrone1Status(d => ...)' if you only need 'drone1Status' in the 'setDrone1Status' call.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [drone1Status, drone2Status, fetchAlt, popoverOpen]",{"range":"64","text":"65"},[3333,3346],"[drone1Status, drone2Status, fetchAlt, popoverOpen]"]